{"ast":null,"code":"import{ko}from\"date-fns/esm/locale\";import\"../../Css/datepicker.css\";import DatePicker from\"react-datepicker\";import{jsx as _jsx}from\"react/jsx-runtime\";var extractDatePart=function extractDatePart(isoString){if(typeof isoString===\"string\"&&isoString.includes(\"T\")){return isoString.split(\"T\")[0];}return isoString;};export default function DatePickerV1(props){var selected=props.selected,onChange=props.onChange,className=props.className;var isValidDate=function isValidDate(dateString){var regex=/^\\d{4}-\\d{2}-\\d{2}$/;return regex.test(dateString);};var selectedDate=isValidDate(extractDatePart(selected))?new Date(extractDatePart(selected)):new Date();var handleChange=function handleChange(date){var newDate=date.toISOString().slice(0,10);onChange(newDate);};return/*#__PURE__*/_jsx(DatePicker,{className:\"w-32 text-lg text-center border rounded-md ml-4 custom-datepicker-input \".concat(className),selected:selectedDate,onChange:handleChange,dateFormat:\"yyyy-MM-dd\",locale:ko});}","map":{"version":3,"names":["ko","DatePicker","jsx","_jsx","extractDatePart","isoString","includes","split","DatePickerV1","props","selected","onChange","className","isValidDate","dateString","regex","test","selectedDate","Date","handleChange","date","newDate","toISOString","slice","concat","dateFormat","locale"],"sources":["D:/Git_Hub/JMEDUSERVER/react/sources/src/Components/datePicker/DatePicker.jsx"],"sourcesContent":["import { ko } from \"date-fns/esm/locale\";\nimport \"../../Css/datepicker.css\";\nimport DatePicker from \"react-datepicker\";\nimport PropTypes from \"prop-types\";\n\nconst extractDatePart = (isoString) => {\n  if (typeof isoString === \"string\" && isoString.includes(\"T\")) {\n    return isoString.split(\"T\")[0];\n  }\n\n  return isoString;\n};\n\nexport default function DatePickerV1(props) {\n  const { selected, onChange, className } = props;\n\n  const isValidDate = (dateString) => {\n    const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    return regex.test(dateString);\n  };\n  const selectedDate = isValidDate(extractDatePart(selected))\n    ? new Date(extractDatePart(selected))\n    : new Date();\n\n  const handleChange = (date) => {\n    const newDate = date.toISOString().slice(0, 10);\n    onChange(newDate);\n  };\n\n  return (\n    <DatePicker\n      className={`w-32 text-lg text-center border rounded-md ml-4 custom-datepicker-input ${className}`}\n      selected={selectedDate}\n      onChange={handleChange}\n      dateFormat=\"yyyy-MM-dd\"\n      locale={ko}\n    />\n  );\n}\n\nDatePickerV1.propTypes = {\n  selected: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n"],"mappings":"AAAA,OAASA,EAAE,KAAQ,qBAAqB,CACxC,MAAO,0BAA0B,CACjC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1C,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,SAAS,CAAK,CACrC,GAAI,MAAO,CAAAA,SAAS,GAAK,QAAQ,EAAIA,SAAS,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC5D,MAAO,CAAAD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAChC,CAEA,MAAO,CAAAF,SAAS,CAClB,CAAC,CAED,cAAe,SAAS,CAAAG,YAAYA,CAACC,KAAK,CAAE,CAC1C,GAAQ,CAAAC,QAAQ,CAA0BD,KAAK,CAAvCC,QAAQ,CAAEC,QAAQ,CAAgBF,KAAK,CAA7BE,QAAQ,CAAEC,SAAS,CAAKH,KAAK,CAAnBG,SAAS,CAErC,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,UAAU,CAAK,CAClC,GAAM,CAAAC,KAAK,CAAG,qBAAqB,CACnC,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACF,UAAU,CAAC,CAC/B,CAAC,CACD,GAAM,CAAAG,YAAY,CAAGJ,WAAW,CAACT,eAAe,CAACM,QAAQ,CAAC,CAAC,CACvD,GAAI,CAAAQ,IAAI,CAACd,eAAe,CAACM,QAAQ,CAAC,CAAC,CACnC,GAAI,CAAAQ,IAAI,CAAC,CAAC,CAEd,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,IAAI,CAAK,CAC7B,GAAM,CAAAC,OAAO,CAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAC/CZ,QAAQ,CAACU,OAAO,CAAC,CACnB,CAAC,CAED,mBACElB,IAAA,CAACF,UAAU,EACTW,SAAS,4EAAAY,MAAA,CAA6EZ,SAAS,CAAG,CAClGF,QAAQ,CAAEO,YAAa,CACvBN,QAAQ,CAAEQ,YAAa,CACvBM,UAAU,CAAC,YAAY,CACvBC,MAAM,CAAE1B,EAAG,CACZ,CAAC,CAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}